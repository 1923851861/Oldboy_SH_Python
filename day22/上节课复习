上节课复习
    1、__init__方法：用于在调用类时/实例化时自动触发，为对象初始化自己独有的特征
        class People:
            country='China'
            def __init__(self,name,age,sex):
                self.name=name
                self.age=age
                self.sex=sex

            def eat(self):
                self.name
                self.func()


        #实例化:
        #1、创造一个空对象p1
        #2、触发对象下的__init__方法，让后将p1,'egon',18,'male'一同传入
        p1=People('egon',18,'male')

    2、绑定方法：
        在类中定义的函数，类可以使用，但类去调用就是一个普通的函数而已，没有自动传值一说
        但类中定义的函数，其实是给对象用的，而且是绑定给对象用的
        绑定给谁就应该由谁来调用，谁来调用就会将谁当作第一个参数自动传入

        p1.eat()

        强调对象的精髓：
            对象不仅包含一系列数据（自己独有的+与其他对象共有的），还包含专门操作该数据的方法


    3、在python3中统一类与类型的概念
        l=[1,2,3] #l=list([1,2,3])
        l.append(4)

        l1=[4,5,6]
        l1.append(5)

        class Foo:pass

    4、继承
        继承是一种新建类的方式，新建的类称为子类或派生类，被继承成类的称为父类 或超类或基类，
        继承的特性：子类可以“遗传”父类的属性

        用继承的目的就是：减少代码冗余

        class Foo:
            pass

        class Bar(Foo):
            pass

        新式类：继承了object类的类Foo，以及Foo类的子类
        经典类：没有继承了object类的类Foo，以及Foo类的子类

        只有在python2中才有经典类，在python3中全为新式类（不继承任何类的类默认就会继承object）

        class Foo(object):
            pass

    5、派生
       在子中定义的新属性称为派生，在使用中，始终以自己有的为准
       class Foo:
            pass

        class Bar(Foo):
            x=1

            def func(self):
                pass


    6、在子类派生出的新方法中重用父类功能
         指名道姓（跟继承无关）：类名.函数(全部参数。。。)



今日内容：
    1、组合（*****）
    2、菱形继承问题（新式类vs经典类）（*****）
    3、在子派生的新方法中重用父类功能的两种方式(*****)

    4、多态与多态性(*****)
    5、封装(*****)