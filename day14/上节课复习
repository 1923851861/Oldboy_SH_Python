上节课复习：
    1、有参装饰器
        def outter(x):
            def deco(func):
                def wrapper(*args,**kwargs):
                    res=func(*args,**kwargs)
                    return res
                return wrapper
            return deco


        @outter(x=1) #index=deco(index)
        def index():
            pass

    2、迭代器
        1、迭代：是一个重复的过程，每次重复都是基于上一次的结果而来
            迭代器：迭代取值的工具

        2、为什么要用迭代器
            对于没有索引的数据类型，必须找到一种通用的不依赖索引的迭代取值方式

        3、如何用迭代器
            可迭代的对象：但凡内置有__iter__方法的对象都是可迭代的对象
                        迭代器对象=可迭代的对象.__iter__()
            迭代器对象：既内置有__iter__方法，又内置有__next__方法的对象
                        迭代器对象本身=迭代器对象.__iter__()
                        拿到的是下一个值=迭代器对象.__next__()

            ps：迭代器对象一定是可迭代对象

            for i in 可迭代的对象：
                pass


            总结迭代器优缺点：
                优点
                    1、节省内存
                    2、提供一种不依赖索引的迭代取值方式
                        l=[1,2,3]
                        iter_l=iter(l)
                        next(iter_l)
                        next(iter_l)

                缺点：
                    1、取值不灵活，只能往后取不能往前推
                    2、无法预测值的个数


                l=[1,2,3,4,....]
                iter_l=iter(l)

今日内容
    生成器
    三元表达式
    列表生成式、字典生成式、生成器表达式
    递归
    面向过程编程
    内置函数
